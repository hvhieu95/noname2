{"ast":null,"code":"import _objectSpread from \"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/noname/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/noname/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\hoang\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\noname\\\\src\\\\DraggableCard.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { ResizableBox } from \"react-resizable\";\nimport \"react-resizable/css/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DraggableCard = function DraggableCard(_ref) {\n  _s();\n  var shape = _ref.shape,\n    onRemove = _ref.onRemove;\n  var _useState = useState(\"text\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    cardText = _useState2[0],\n    setCardText = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    disableDragging = _useState4[0],\n    setDisableDragging = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    shapes = _useState6[0],\n    setShapes = _useState6[1];\n  var _useState7 = useState(1),\n    _useState8 = _slicedToArray(_useState7, 2),\n    nextShapeId = _useState8[0],\n    setNextShapeId = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    currentShape = _useState10[0],\n    setCurrentShape = _useState10[1];\n  var shapeRef = useRef(null);\n  var shapeStyles = {\n    square: {},\n    circle: {\n      borderRadius: \"50%\"\n    },\n    triangle: {\n      clipPath: \"polygon(50% 0%, 0% 100%, 100% 100%)\"\n    }\n  };\n  var handleTextChange = function handleTextChange(event) {\n    setCardText(event.target.value);\n  };\n  var handleStart = function handleStart() {\n    setDisableDragging(true);\n  };\n  var handleStop = function handleStop() {\n    setDisableDragging(false);\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === \"Delete\") {\n      onRemove();\n    }\n  };\n  var handleButtonClick = function handleButtonClick(shapeType) {\n    setCurrentShape(shapeType);\n    if (shapeRef.current) {\n      shapeRef.current.style.top = \"\".concat(window.scrollY, \"px\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"draggable-container\",\n    children: [currentShape && /*#__PURE__*/_jsxDEV(Draggable, {\n      disabled: disableDragging,\n      onStart: handleStart,\n      onStop: handleStop,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: shapeRef,\n        onKeyDown: handleKeyDown,\n        tabIndex: 0,\n        style: {\n          position: \"absolute\",\n          top: \"0\",\n          left: \"0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ResizableBox, {\n          resizeHandles: [\"nw\", \"ne\", \"sw\", \"se\", \"n\", \"e\", \"s\", \"w\"],\n          width: 200,\n          height: 150,\n          style: _objectSpread(_objectSpread({}, shapeStyles[currentShape]), {}, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"lightblue\",\n            border: \"1px solid blue\"\n          }),\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: cardText,\n            onChange: handleTextChange,\n            style: _objectSpread(_objectSpread({}, shapeStyles[currentShape]), {}, {\n              backgroundColor: \"lightblue\",\n              resize: \"none\",\n              border: \"none\",\n              outline: \"none\",\n              flex: 1,\n              textAlign: \"center\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return handleButtonClick(\"square\");\n      },\n      children: \"Add Square\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return handleButtonClick(\"circle\");\n      },\n      children: \"Add Circle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return handleButtonClick(\"triangle\");\n      },\n      children: \"Add Triangle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n_s(DraggableCard, \"5UVmIQyKDtviQhGcCRIYevF2LyQ=\");\n_c = DraggableCard;\nexport default DraggableCard;\nvar _c;\n$RefreshReg$(_c, \"DraggableCard\");","map":{"version":3,"names":["React","useState","useRef","Draggable","ResizableBox","jsxDEV","_jsxDEV","DraggableCard","_ref","_s","shape","onRemove","_useState","_useState2","_slicedToArray","cardText","setCardText","_useState3","_useState4","disableDragging","setDisableDragging","_useState5","_useState6","shapes","setShapes","_useState7","_useState8","nextShapeId","setNextShapeId","_useState9","_useState10","currentShape","setCurrentShape","shapeRef","shapeStyles","square","circle","borderRadius","triangle","clipPath","handleTextChange","event","target","value","handleStart","handleStop","handleKeyDown","key","handleButtonClick","shapeType","current","style","top","concat","window","scrollY","className","children","disabled","onStart","onStop","ref","onKeyDown","tabIndex","position","left","resizeHandles","width","height","_objectSpread","display","justifyContent","alignItems","backgroundColor","border","onChange","resize","outline","flex","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_this","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hoang/OneDrive/Máy tính/noname/src/DraggableCard.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { ResizableBox } from \"react-resizable\";\r\nimport \"react-resizable/css/styles.css\";\r\n\r\ntype ShapeType = \"square\" | \"circle\" | \"triangle\";\r\n\r\ntype DraggableCardProps = {\r\n  shape: ShapeType;\r\n  onRemove: () => void;\r\n};\r\n\r\nconst DraggableCard: React.FC<DraggableCardProps> = ({ shape, onRemove }) => {\r\n  const [cardText, setCardText] = useState<string>(\"text\");\r\n  const [disableDragging, setDisableDragging] = useState<boolean>(false);\r\n  const [shapes, setShapes] = useState<any[]>([]);\r\n  const [nextShapeId, setNextShapeId] = useState<number>(1);\r\n  const [currentShape, setCurrentShape] = useState<ShapeType | null>(null);\r\n  const shapeRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const shapeStyles = {\r\n    square: {},\r\n    circle: {\r\n      borderRadius: \"50%\",\r\n    },\r\n    triangle: {\r\n      clipPath: \"polygon(50% 0%, 0% 100%, 100% 100%)\",\r\n    },\r\n  };\r\n\r\n  const handleTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setCardText(event.target.value);\r\n  };\r\n\r\n  const handleStart = () => {\r\n    setDisableDragging(true);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setDisableDragging(false);\r\n  };\r\n\r\n  const handleKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Delete\") {\r\n      onRemove();\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = (shapeType: ShapeType) => {\r\n    setCurrentShape(shapeType);\r\n    if (shapeRef.current) {\r\n      shapeRef.current.style.top = `${window.scrollY}px`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"draggable-container\">\r\n      {currentShape && (\r\n        <Draggable\r\n          disabled={disableDragging}\r\n          onStart={handleStart}\r\n          onStop={handleStop}\r\n        >\r\n          <div\r\n            ref={shapeRef}\r\n            onKeyDown={handleKeyDown}\r\n            tabIndex={0}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"0\",\r\n              left: \"0\",\r\n            }}\r\n          >\r\n            <ResizableBox\r\n              resizeHandles={[\"nw\", \"ne\", \"sw\", \"se\", \"n\", \"e\", \"s\", \"w\"]}\r\n              width={200}\r\n              height={150}\r\n              style={{\r\n                ...shapeStyles[currentShape],\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"lightblue\",\r\n                border: \"1px solid blue\",\r\n              }}\r\n            >\r\n              <textarea\r\n                value={cardText}\r\n                onChange={handleTextChange}\r\n                style={{\r\n                  ...shapeStyles[currentShape],\r\n                  backgroundColor: \"lightblue\",\r\n                  resize: \"none\",\r\n                  border: \"none\",\r\n                  outline: \"none\",\r\n                  flex: 1,\r\n                  textAlign: \"center\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              />\r\n            </ResizableBox>\r\n          </div>\r\n        </Draggable>\r\n      )}\r\n      <button onClick={() => handleButtonClick(\"square\")}>Add Square</button>\r\n      <button onClick={() => handleButtonClick(\"circle\")}>Add Circle</button>\r\n      <button onClick={() => handleButtonClick(\"triangle\")}>Add Triangle</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}